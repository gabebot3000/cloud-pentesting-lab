"""An AWS Python Pulumi program"""

import pulumi
import pulumi_aws as aws

# Create VPC and internet gateway
main_vpc = aws.ec2.Vpc(
    'main_vpc',
    cidr_block='10.0.0.0/16',
    enable_dns_hostnames=True,
    tags={
        'Name': 'main_vpc'
        }
    )

igw = aws.ec2.InternetGateway(
    'internet_gateway',
    vpc_id=main_vpc.id,
    tags={
        'Name': 'internet_gateway'
        }
    )


# Create public and private subnets
public_subnet = aws.ec2.Subnet(
    'public_subnet',
    vpc_id=main_vpc.id,
    cidr_block='10.0.1.0/24',
    tags={
        'Name': 'public_subnet'
        }
    )

private_subnet = aws.ec2.Subnet(
    'private_subnet',
    vpc_id=main_vpc.id,
    cidr_block='10.0.2.0/24',
    tags={
        'Name': 'private_subnet'
        }
    )


# Create public route table and associate it with public subnet
public_rtb = aws.ec2.RouteTable(
    'public_route_table',
    vpc_id=main_vpc.id,
    routes=[
        aws.ec2.RouteTableRouteArgs(
            cidr_block='0.0.0.0/0',
            gateway_id=igw.id,
        )
    ],
    tags={
        'Name': 'public_route_table'
        }
    )

public_rt_association = aws.ec2.RouteTableAssociation(
    'public_association',
    subnet_id=public_subnet.id,
    route_table_id=public_rtb.id,
    )


# Get Amazon Machines Images
kali_ami = aws.ec2.get_ami(
    most_recent="true",
    owners=["679593333241"],
    filters=[{
        "name":"name",
        "values":["kali-linux-2022.3b-*"]
        }]
    )


# Create security groups
kali_sg = aws.ec2.SecurityGroup(
    'KaliSecurityGroup',
    description='Enable SSH access',
    vpc_id=main_vpc.id,
    ingress=[
        { 'protocol': 'tcp', 'from_port': 0, 'to_port': 22, 'cidr_blocks': ['0.0.0.0/0'] },
    ],
    egress=[
        { 'protocol': 'all', 'from_port': 0, 'to_port': 0, 'cidr_blocks': ['0.0.0.0/0'] },
    ],
    tags={
        'Name': 'KaliSecurityGroup'
        }
    )

vuln_sg = aws.ec2.SecurityGroup(
    'VulnSecurityGroup',
    description='Enable ingress from KaliSecurityGroup',
    vpc_id=main_vpc.id,
    ingress=[
        { 'protocol': -1, 'from_port': 0, 'to_port': 0, 'security_groups': [kali_sg.id]},
    ],
    egress=[
        { 'protocol': 'all', 'from_port': 0, 'to_port': 0, 'cidr_blocks': ['0.0.0.0/0'] },
    ],
    tags={
        'Name': 'VulnSecurityGroup'
        }
    )


# Create Kali, Metaspoitable 3, and OpenVPN instance
kali = aws.ec2.Instance(
    'kali_vm',
    ami=kali_ami.id,
    associate_public_ip_address=True,
    instance_type="t2.micro",
    key_name="Kali EC2",
    private_ip='10.0.1.5',
    vpc_security_group_ids=[kali_sg.id],
    subnet_id=public_subnet.id,
    tags={
        "Name": "kali_vm",
        }
    )

ms3 = aws.ec2.Instance(
    'ms3_vm',
    ami='ami-0dc0bc24b7297cee3',
    associate_public_ip_address=False,
    instance_type="t2.micro",
    private_ip='10.0.2.5',
    vpc_security_group_ids=[vuln_sg.id],
    subnet_id=private_subnet.id,
    tags={
        "Name": "ms3",
        }
    )


pulumi.export('ip', kali.public_ip)
pulumi.export('hostname', kali.public_dns)
